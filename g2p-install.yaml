---
- name: G2P install
  hosts: all
  become: yes

  tasks:
    - name: Update and upgrade system
      become: true
      yum:
        name: '*'
        state: latest

# MONGODB
# Issues do check
# Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
# /sys/kernel/mm/transparent_hugepage/enabled is 'always'. We suggest setting it to 'never'
# vm.max_map_count is too low

    - name: MongoDB | Add repository
      yum_repository:
        name: mongodb
        description: MongoDB yum repository
        baseurl: 'https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/6.0/x86_64/'
        gpgkey: 'https://www.mongodb.org/static/pgp/server-6.0.asc'
        gpgcheck: yes
        enabled: yes
      tags:
        - mongodb

    - name: MongoDB | Create /data/db path to fix an issue on Oracle Linux
      file: 
        path: /data/db
        state: directory
        recurse: yes
      tags:
        - mongodb

    - name: MongoDB | Install
      become: true
      yum:
        name: mongodb-org
        state: present
      tags:
        - mongodb

    - name: MongoDB | Start and Enable Service
      become: true
      shell: |
        systemctl start mongod
        systemctl enable mongod
      tags:
        - mongodb


# JENKINS (need fix, see this: https://pkg.jenkins.io/redhat-stable/)
#    - name: Jenkins | Add APT Key
#      ansible.builtin.shell: |
#        curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo tee \
#        /usr/share/keyrings/jenkins-keyring.asc > /dev/null
#      tags:
#        - jenkins
#
#    - name: Jenkins | Write repository entry
#      ansible.builtin.shell: |
#        echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
#        https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
#        /etc/apt/sources.list.d/jenkins.list > /dev/null
#      tags:
#        - jenkins

    - name: Jenkins | Add repository
      yum_repository:
        name: jenkins
        description: Jenkins-stable
        baseurl: 'http://pkg.jenkins.io/redhat-stable'
        gpgkey: 'https://pkg.jenkins.io/redhat-stable/jenkins.io.key'
        gpgcheck: yes
        enabled: yes
      tags:
        - jenkins


# Install Packages
    - name: YUM | Install dependence packages
      yum:
        name: ["@Development tools", "git", "vim", "java-11-openjdk", "make", "automake", "gcc", "gcc-c++", "kernel-devel", "unixODBC", "unixODBC-devel", "postgresql-odbc", "openssl-devel", "bzip2-devel", "libffi-devel", "unzip", "libsqlite3x-devel", "libsqlite3x", "libxml2-devel", "zlib-devel", "zlib", "ncurses-devel", "ncurses-devel", "ncurses"]
        state: present
        update_cache: yes
      tags:
        - yum
        

# ~/.bashrc
    - name: BASH | Setting local bin folder for non root user
      become_user: "{{ lookup('env', 'USER') }}"
      lineinfile:
        line: "{{ item }}"
        path: ~/.bashrc
      with_items:
        - "# set local/bin folder"
        - "export PATH=$PATH:$HOME/.local/bin"


# ASDF-VM
    - name: ASDF-VM
      become_user: "{{ lookup('env', 'USER') }}"
      git:
        repo: "https://github.com/asdf-vm/asdf.git"
        dest: ~/.asdf
        version: v0.11.1

    - name: ASDF-VM | add bashrc
      become_user: "{{ lookup('env', 'USER') }}"
      lineinfile:
        line: "{{ item }}"
        path: ~/.bashrc
      with_items:
        - "# asdf-vm"
        - ". $HOME/.asdf/asdf.sh"
        - ". $HOME/.asdf/completions/asdf.bash"

    - name: ASDF-VM | plugins install
      become_user: "{{ lookup('env', 'USER') }}"
      shell: "$HOME/.asdf/bin/asdf plugin-add {{ item }}"
      ignore_errors: yes
      with_items:
        - python

    - name: ASDF-VM | Install Python 3.8.x
      become_user: "{{ lookup('env', 'USER') }}"
      shell: "$HOME/.asdf/bin/asdf install python 3.8.16"


# VARIABLES
    - name: Include variables for git commands
      ansible.builtin.include_vars:
        file: variables.yaml
        name: var
      tags:
        - g2p

# G2P
# https://hubsd@dev.azure.com/hubsd/DATA%20PLATAFORMA/_git/g2p
    - name: Download G2P
      become_user: "{{ lookup('env', 'USER') }}"
      git:
        repo: "https://{{ var.git_user | urlencode }}:{{ var.git_pass | urlencode }}@dev.azure.com/hubsd/DATA%20PLATAFORMA/_git/g2p"
        dest: ~/apps/G2P
        force: yes
      tags:
        - g2p


# https://hubsd@dev.azure.com/hubsd/DATA%20PLATAFORMA/_git/g2p-luigi
    - name: Download G2P
      become_user: "{{ lookup('env', 'USER') }}"
      git:
        repo: "https://{{ var.git_user | urlencode }}:{{ var.git_pass | urlencode }}@dev.azure.com/hubsd/DATA%20PLATAFORMA/_git/g2p-luigi"
        dest: ~/apps/G2P-LUIGI
        force: yes
      tags:
        - g2p
        
    - name: Create some directories
      become_user: "{{ lookup('env', 'USER') }}"
      file:
        path: "~/{{ item }}"
        state: directory
      with_items:
        - apps
        - apps/metabase
        - apps/files
      tags:
        - metabase


# METABASE
    - name: Download Metabase
      become_user: "{{ lookup('env', 'USER') }}"
      ansible.builtin.get_url:
        url: https://downloads.metabase.com/v0.45.2.1/metabase.jar
        dest: ~/apps/metabase/metabase.jar
      tags:
        - metabase


# PENTAHO
    - name: Pentaho | Download
      become_user: "{{ lookup('env', 'USER') }}"
      ansible.builtin.get_url:
        url: https://sourceforge.net/projects/pentaho/files/Pentaho-9.3/client-tools/pdi-ce-9.3.0.0-428.zip/download
        dest: ~/apps/files/pdi-ce-9.3.0.0-428.zip
        checksum: sha256:5c7a453ec448d4b8a568e445b119bcf4f0f41517b42e3626bc437f882c9f46c1
      tags:
        - pentaho

    - name: Pentaho | Extract file
      become_user: "{{ lookup('env', 'USER') }}"
      ansible.builtin.unarchive:
        src: ~/apps/files/pdi-ce-9.3.0.0-428.zip
        dest: ~/apps
      tags:
        - pentaho


# Pentaho mssql-jdbc drivers
    - name: Pentaho | Download mssql-jdbc drivers
      become_user: "{{ lookup('env', 'USER') }}"
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: ~/apps/files
      with_items:
        - https://github.com/microsoft/mssql-jdbc/releases/download/v9.4.1/mssql-jdbc-9.4.1.jre8.jar
        - https://github.com/microsoft/mssql-jdbc/releases/download/v11.2.1/mssql-jdbc-11.2.1.jre8.jar
      tags:
        - pentaho

    - name: Pentaho | Copy mssql-jdbc drivers to program path
      become_user: "{{ lookup('env', 'USER') }}"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: ~/apps/data-integration/lib
      with_items:
        - ~/apps/files/mssql-jdbc-9.4.1.jre8.jar
        - ~/apps/files/mssql-jdbc-11.2.1.jre8.jar 
      tags:
        - pentaho

#    - name: Pentaho | Add Repository libwebkitgtk-1.0-0
#      become: yes
#      apt_repository:
#        repo: "deb [trusted=yes] http://br.archive.ubuntu.com/ubuntu bionic main universe"
#      tags:
#        - pentaho
#
#    - name: APT | Install libwebkitgtk-1.0-0
#      become: yes
#      apt:
#        name: "libwebkitgtk-1.0-0"
#        state: present
#        update_cache: yes
#      tags:
#        - pentaho

# DBEAVER
    - name: Dbeaver | Download
      become_user: "{{ lookup('env', 'USER') }}"
      ansible.builtin.get_url:
        url: https://dbeaver.io/files/dbeaver-ce-latest-linux.gtk.x86_64.tar.gz
        dest: ~/apps/files/dbeaver-ce-latest-linux.gtk.x86_64.tar.gz
      tags:
        - dbeaver

    - name: Dbeaver | Extract file
      become_user: "{{ lookup('env', 'USER') }}"
      ansible.builtin.unarchive:
        src: ~/apps/files/dbeaver-ce-latest-linux.gtk.x86_64.tar.gz
        dest: ~/apps
      tags:
        - dbeaver


# https://downloads.mongodb.com/compass/mongodb-compass-1.35.0.x86_64.rpm
    - name: MongoDB | Download MongoDB Compass
      become_user: "{{ lookup('env', 'USER') }}"
      ansible.builtin.get_url:
        url: https://downloads.mongodb.com/compass/mongodb-compass-1.35.0.x86_64.rpm
        dest: ~/apps/files/mongodb-compass-1.35.0.x86_64.rpm
      tags:
        - compass

    - name: YUM | Install MongoDB Compass
      become: yes
      yum:
        name: "/home/{{ lookup('env', 'USER') }}/apps/files/mongodb-compass-1.35.0.x86_64.rpm"
        state: present
        disable_gpg_check: true
      tags:
        - compass
